{"scratchpad": {"guidelinesUrlPath": "/computer-programming/guidelines/pjs", "contentKindCode": "p", "newUrlPath": "/computer-programming/new/pjs", "isPublished": false, "hideFromHotlist": false, "spinoffCount": 0, "originScratchpadId": 6223097608929280, "projectEval": null, "height": 400, "date": "2015-06-14T14:43:36Z", "originSimilarity": 0.015521484005300019, "id": 4945252546904064, "definitelyNotSpam": false, "editSlug": "edit/p/random-array", "category": null, "originRevisionId": 5649050225344512, "title": "Random Array", "translatedProjectEval": null, "sendToPeers": false, "slug": "random-array", "isChallenge": false, "width": 400, "descriptionHtml": "", "youtubeId": null, "docsUrlPath": "/computer-programming/docs/pjs", "contentKind": "Scratchpad", "type": "scratchpad", "revision": {"tests": "", "code": "/**\n * Generative Art: Random Array\n * \n * This is an array where I keep swapping random values to sort it in increasing/decreasing order.\n * \n * The program starts with sorting a randomised array in increasing order,\n * when it is nearly sorted, it changes to decreasing order.\n * \n * Elements far from their correct position are more likely to be selected to randomise.\n * The probability is proportional to the distance of the element to the correct position.\n * (It is 0 if the element is in the correct position.)\n * \n * Some details:\n * How was this created:\n * I was inspired by how sorting algorithms look when they are displayed.\n * I decided on a random algorithm to find the next pair of elements to swap,\n * as well as lengthen the amount of time taken for the array to sort\n * for it to look like it was sorting while maintaining some randomness.\n * \n * What I love about programming:\n * You can really make anything you want.\n * There are many things one has not programmed yet,\n * and you are make anything with programming.\n */\n\n/** THINGS TO CHANGE **/\n// set to >1. Factors of width are nice.\nvar arraySize = 200;\n\n// will determine how often the sort switches from increasing to decreasing\nvar tolerance = pow(arraySize, 1.6);\n\n// 1 for starting with increasing, -1 for starting with decreasing\nvar sortResult = 1;\n\n/** PREPARATION CODE **/\n// Error check!\nif (arraySize < 2) { throw \"RangeError: arraySize must be at least 2.\"; }\n\n// Arrays to sort\nvar numberArray = [];\nvar chooseArray = [];\n\n// initialising arrays\nfor (var i=1;i<=arraySize;i++) {\n    numberArray.push(i);\n    chooseArray.push(0);\n}\n\n// randomise array\nfor (var i=arraySize;i>0;i--) {\n    var newPosition = floor(random(i));\n    if (newPosition !== i-1) {\n        numberArray[i-1] ^= numberArray[newPosition];\n        numberArray[newPosition] ^= numberArray[i-1];\n        numberArray[i-1] ^= numberArray[newPosition];\n    }\n}\n\n// Drawing setup\nframeRate(200);\nnoStroke();\n\n// Binary search\nvar binarySearchProbability = function(probability) {\n    var lower = 0, upper = arraySize-1;\n    while (lower<upper) {\n        var mid = floor((lower+upper)/2);\n        if (chooseArray[mid]>probability) {\n            upper = mid;\n        } else {\n            lower = mid+1;\n        }\n    }\n    return lower;\n};\n\nvar draw = function() {\n    background(0, 255, 255);\n    // calculates the total error in the sort\n    var sortError = 0;\n    for (var i=0;i<arraySize;i++) {\n        // conditional to colour the array\n        if ((i === 0 && sortResult === 1) || (i>0 && numberArray[i] > numberArray[i-1])) {\n            fill(255, 0, 0);\n        } else {\n            fill(255, 127, 0);\n        }\n        if (sortResult === 1) {\n            sortError += abs(numberArray[i]-i-1);\n        } else {\n            sortError += abs(numberArray[i]-(arraySize-i));\n        }\n        chooseArray[i] = sortError;\n        // drawing the array without gaps\n        rect(floor(i*width/arraySize), height, floor((i+1)*width/arraySize)-floor(i*width/arraySize), -floor(numberArray[i]*height/arraySize));\n    }\n    // should we change direction?\n    if (sortError<tolerance) {\n        sortResult *= -1;\n    }\n    // get indices to swap\n    var firstIndex = binarySearchProbability(floor(random(sortError))); \n    var secondIndex;\n    do { // get 2 different indices\n        secondIndex = binarySearchProbability(floor(random(sortError)));\n    } while (secondIndex === firstIndex);\n    // in-place swap (after checking if the swap makes the array more sorted)\n    if (sortResult*(firstIndex-secondIndex)*(numberArray[firstIndex]-numberArray[secondIndex])<0) {\n        numberArray[firstIndex] ^= numberArray[secondIndex];\n        numberArray[secondIndex] ^= numberArray[firstIndex];\n        numberArray[firstIndex] ^= numberArray[secondIndex];\n    }\n};\n", "created": "2015-06-14T14:43:36Z", "folds": [], "translatedMp3Url": "", "hasAudio": false, "mp3Url": "", "editorType": "ace_pjs", "playback": "", "youtubeId": null, "configVersion": 4, "id": 5668600916475904}, "tests": "", "imagePath": "/computer-programming/random-array/4945252546904064/5668600916475904.png", "nodeType": "scratchpad", "description": "", "isProject": false, "tags": [], "translatedDescription": "", "byChild": false, "difficulty": -1, "originIsProject": false, "key": "ag5zfmtoYW4tYWNhZGVteXIXCxIKU2NyYXRjaHBhZBiAgIir5bXkCAw", "canvasOnly": false, "nodeSlug": "p/random-array", "kind": "Scratchpad", "termMap": {"new": "New Program", "guidelines": "Program Guidelines", "restart": "Restart"}, "translatedDescriptionHtml": "", "globalId": "p4945252546904064", "created": "2015-06-14T05:07:39Z", "url": "https://www.khanacademy.org/computer-programming/random-array/4945252546904064", "imageUrl": "https://www.khanacademy.org/computer-programming/random-array/4945252546904064/5668600916475904.png", "translatedTests": "", "sumVotesIncremented": 1, "defaultUrlPath": null, "flags": [], "relativeUrl": "/computer-programming/random-array/4945252546904064", "isProjectOrFork": false, "userAuthoredContentType": "pjs", "kaid": "kaid_884271512496343411898406", "translatedTitle": "Random Array"}, "embedded": false, "creatorProfile": {"isSelf": false, "countVideosCompleted": 226, "isParentOfLoggedInUser": false, "isChildAccount": false, "hasChangedAvatar": true, "soundOn": false, "followRequiresApproval": true, "canModifyCoaches": true, "allowedByParentToAddAnyCoach": true, "hasStudents": true, "isCurator": false, "isCreator": false, "childPageRoot": "/parent/child/Element118/", "backgroundSrc": "https://cdn.kastatic.org/images/profile/backgrounds/bg-cosmos.jpg", "isDeveloper": false, "avatarName": "leafers_ultimate_style", "affiliations": [], "isModerator": false, "canEvalCsProjects": true, "globalPermissions": [], "profileRoot": "/profile/Element118/", "email": "", "username": "Element118", "bio": "I have nice programs about algorithms and stuff. New to programming? https://www.khanacademy.org/computer-programming/_/6737152324665344", "backgroundName": "cosmos", "countBrandNewNotifications": 5, "isActivityAccessible": false, "background": {"translatedDisplayName": "Cosmos", "imagePath": "/images/profile/backgrounds/bg-cosmos.jpg", "displayName": "Cosmos", "name": "cosmos", "thumbSrc": "https://cdn.kastatic.org/images/profile/backgrounds/bg-cosmos-preview.png", "translatedRequirements": ["Earn 1,000,000 energy points"], "rewardType": "profile_background", "thumbnailSrc": "https://cdn.kastatic.org/images/profile/backgrounds/bg-cosmos.jpg", "imageSrc": "https://cdn.kastatic.org/images/profile/backgrounds/bg-cosmos.jpg", "thumbPath": "/images/profile/backgrounds/bg-cosmos-preview.png", "thumbnailPath": ""}, "isOrphan": false, "isPublic": true, "canHellban": false, "kaid": "kaid_884271512496343411898406", "includesUserDataInfo": true, "isPhantom": false, "isDataCollectible": false, "nickname": "Element118", "canMessageUsers": false, "canCreateOfficialClarifications": false, "publicBadges": [{"absoluteUrl": "https://www.khanacademy.org/badges/da-vinci", "isRetired": false, "isOwned": false, "description": "Da Vinci", "icons": {"compact": "https://cdn.kastatic.org/images/badges/sun/davinci-60x60.png", "large": "https://cdn.kastatic.org/images/badges/sun/davinci-512x512.png", "small": "https://cdn.kastatic.org/images/badges/sun/davinci-40x40.png", "email": "https://cdn.kastatic.org/images/badges/sun/davinci-70x70.png"}, "relativeUrl": "/badges/da-vinci", "badgeCategory": 3, "translatedDescription": "Da Vinci", "safeExtendedDescription": "Achieve mastery in 500 unique skills", "points": 200000, "translatedSafeExtendedDescription": "Achieve mastery in 500 unique skills", "iconSrc": "https://cdn.kastatic.org/images/badges/sun/davinci-40x40.png", "hideContext": false, "slug": "da-vinci", "name": "davincimasterybadge"}, {"absoluteUrl": "https://www.khanacademy.org/badges/ridiculous-listener", "isRetired": false, "isOwned": false, "description": "Ridiculous Listener", "icons": {"compact": "https://cdn.kastatic.org/images/badges/earth/ridiculous-listener-60x60.png", "large": "https://cdn.kastatic.org/images/badges/earth/ridiculous-listener-512x512.png", "small": "https://cdn.kastatic.org/images/badges/earth/ridiculous-listener-40x40.png", "email": "https://cdn.kastatic.org/images/badges/earth/ridiculous-listener-70x70.png"}, "relativeUrl": "/badges/ridiculous-listener", "badgeCategory": 2, "translatedDescription": "Ridiculous Listener", "safeExtendedDescription": "Watch 4 hours of video in a single topic", "points": 0, "translatedSafeExtendedDescription": "Watch 4 hours of video in a single topic", "iconSrc": "https://cdn.kastatic.org/images/badges/earth/ridiculous-listener-40x40.png", "hideContext": false, "slug": "ridiculous-listener", "name": "ridiculousplaylisttimebadge"}, {"absoluteUrl": "https://www.khanacademy.org/badges/299792458-meters-per-second", "isRetired": false, "isOwned": false, "description": "299,792,458 Meters per Second", "icons": {"compact": "https://cdn.kastatic.org/images/badges/earth/299-meters-60x60.png", "large": "https://cdn.kastatic.org/images/badges/earth/299-meters-512x512.png", "small": "https://cdn.kastatic.org/images/badges/earth/299-meters-40x40.png", "email": "https://cdn.kastatic.org/images/badges/earth/299-meters-70x70.png"}, "relativeUrl": "/badges/299792458-meters-per-second", "badgeCategory": 2, "translatedDescription": "299,792,458 Meters per Second", "safeExtendedDescription": "Quickly & correctly answer 75 skill problems in a row (time limit depends on skill difficulty)", "points": 5000, "translatedSafeExtendedDescription": "Quickly & correctly answer 75 skill problems in a row (time limit depends on skill difficulty)", "iconSrc": "https://cdn.kastatic.org/images/badges/earth/299-meters-40x40.png", "hideContext": false, "slug": "299792458-meters-per-second", "name": "ludicroustimedproblembadge"}, {"absoluteUrl": "https://www.khanacademy.org/badges/double-power-hour", "isRetired": false, "isOwned": false, "description": "Double Power Hour", "icons": {"compact": "https://cdn.kastatic.org/images/badges/earth/power-hour-60x60.png", "large": "https://cdn.kastatic.org/images/badges/earth/power-hour-512x512.png", "small": "https://cdn.kastatic.org/images/badges/earth/power-hour-40x40.png", "email": "https://cdn.kastatic.org/images/badges/earth/power-hour-70x70.png"}, "relativeUrl": "/badges/double-power-hour", "badgeCategory": 2, "translatedDescription": "Double Power Hour", "safeExtendedDescription": "Correctly answer 180 problems and watch 30 minutes of video in 2 hours", "points": 0, "translatedSafeExtendedDescription": "Correctly answer 180 problems and watch 30 minutes of video in 2 hours", "iconSrc": "https://cdn.kastatic.org/images/badges/earth/power-hour-40x40.png", "hideContext": false, "slug": "double-power-hour", "name": "doublepowerhourbadge"}, {"absoluteUrl": "https://www.khanacademy.org/badges/millionaire", "isRetired": false, "isOwned": false, "description": "Millionaire", "icons": {"compact": "https://cdn.kastatic.org/images/badges/sun/millionaire-60x60.png", "large": "https://cdn.kastatic.org/images/badges/sun/millionaire-512x512.png", "small": "https://cdn.kastatic.org/images/badges/sun/millionaire-40x40.png", "email": "https://cdn.kastatic.org/images/badges/sun/millionaire-70x70.png"}, "relativeUrl": "/badges/millionaire", "badgeCategory": 3, "translatedDescription": "Millionaire", "safeExtendedDescription": "Earn 1,000,000 energy points", "points": 0, "translatedSafeExtendedDescription": "Earn 1,000,000 energy points", "iconSrc": "https://cdn.kastatic.org/images/badges/sun/millionaire-40x40.png", "hideContext": false, "slug": "millionaire", "name": "millionairebadge"}], "restrictedDomain": null, "moderatorLevel": 0, "dateJoined": "2012-10-25T07:48:33Z", "avatarSrc": "https://cdn.kastatic.org/images/avatars/svg/leafers-ultimate.svg", "isCoachingLoggedInUser": false, "userLocation": {"city": "", "country": "", "googlePlacesId": "", "state": "", "displayText": "", "lastModified": "2015-05-16T07:00:58Z", "postalCode": ""}, "points": 1965250, "avatar": {"translatedDisplayName": "Leafers (Ultimate)", "imagePath": "/images/avatars/svg/leafers-ultimate.svg", "displayName": "Leafers (Ultimate)", "name": "leafers_ultimate_style", "partType": "style", "forModel": "leafers", "translatedRequirements": ["Earn 250,000 energy points"], "rewardType": "avatar_reward", "thumbnailSrc": "https://cdn.kastatic.org/images/avatars/svg/leafers-ultimate.svg", "imageSrc": "https://cdn.kastatic.org/images/avatars/svg/leafers-ultimate.svg", "thumbnailPath": ""}, "canRecordTutorial": false, "isPublisher": false}, "discussion": {"showProjectFeedback": true, "loggedIn": false, "isDeveloper": false, "communityQuestionsTitle": "Computer Science", "showDocumentation": true, "isVideo": false, "translatedCommunityQuestionsTitle": "Computer Science", "focusId": "4945252546904064", "isOwner": false, "restrictPosting": false, "which": "scratchpad-questions", "focusKind": "scratchpad", "communityQuestionsUrl": "/computer-programming/d", "canEdit": false, "canRequestFeedback": false, "showSpinoffs": true}, "upVoted": false, "originScratchpad": {"category": "official", "deleted": false, "imageUrl": "https://www.khanacademy.org/computer-programming/contest-generative-art/6223097608929280/5649050225344512.png", "sendToPeers": false, "translatedDescription": "", "projectEval": null, "slug": "contest-generative-art", "url": "https://www.khanacademy.org/computer-programming/contest-generative-art/6223097608929280", "revision": {"id": 5649050225344512}, "id": 6223097608929280, "translatedTitle": "Contest: Generative Art"}, "flaggedByUser": false, "downVoted": false, "userScratchpad": {"kind": "UserScratchpad", "msWatched": 0, "isProject": false, "msDuration": null, "challengeStatus": -1, "lastMsWatched": 0, "scratchpadKey": "ag5zfmtoYW4tYWNhZGVteXIXCxIKU2NyYXRjaHBhZBiAgIir5bXkCAw", "fullyWatched": false, "isComplete": false, "isChallenge": false, "difficulty": -1, "points": 0, "stashedCode": "", "key": "ag5zfmtoYW4tYWNhZGVteXKuAQsSDlVzZXJTY3JhdGNocGFkIpkBYWc1emZtdG9ZVzR0WVdOaFpHVnRlWEpVQ3hJSVZYTmxja1JoZEdFaVJuVnpaWEpmYVdSZmEyVjVYMmgwZEhBNkx5OXBaQzVyYUdGdVlXTmhaR1Z0ZVM1dmNtY3ZPR00xTXpabU1HVTBNak0wTkRobFpqaGhaRGxpTnpNeE1tWTVaR1prTVdJTTo0OTQ1MjUyNTQ2OTA0MDY0DA", "userKey": "ag5zfmtoYW4tYWNhZGVteXJUCxIIVXNlckRhdGEiRnVzZXJfaWRfa2V5X2h0dHA6Ly9pZC5raGFuYWNhZGVteS5vcmcvOGM1MzZmMGU0MjM0NDhlZjhhZDliNzMxMmY5ZGZkMWIM", "id": "ag5zfmtoYW4tYWNhZGVteXJUCxIIVXNlckRhdGEiRnVzZXJfaWRfa2V5X2h0dHA6Ly9pZC5raGFuYWNhZGVteS5vcmcvOGM1MzZmMGU0MjM0NDhlZjhhZDliNzMxMmY5ZGZkMWIM:4945252546904064", "viewed": true}}