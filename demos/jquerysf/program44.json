{"scratchpad": {"guidelinesUrlPath": "/computer-programming/guidelines/pjs", "contentKindCode": "p", "newUrlPath": "/computer-programming/new/pjs", "hideFromHotlist": false, "spinoffCount": 0, "originScratchpadId": 6223097608929280, "originRevisionId": 5649050225344512, "projectEval": null, "height": 400, "date": "2015-06-22T06:18:58Z", "originSimilarity": 0.22086638194020744, "id": 5087108303814656, "definitelyNotSpam": false, "description": "", "category": null, "isPublished": false, "title": "Trigonometry Art!", "translatedProjectEval": null, "sendToPeers": false, "slug": "trigonometry-art", "isChallenge": false, "width": 400, "descriptionHtml": "", "youtubeId": null, "docsUrlPath": "/computer-programming/docs/pjs", "contentKind": "Scratchpad", "type": "scratchpad", "revision": {"tests": "", "code": "/*\nThis includes 20 different visualizations that I have made. The program cycles through all of the different visualizations without user input, based off of `frameCount`. This is from another program that I made that takes user input:\nhttps://www.khanacademy.org/computer-programming/moving-3d-objects/4625302091333632\n*/\n\n/**\nI have been programming for about three years now. I started programming on Khan Academy about a year ago. I have finished Intro to JS: Drawing and Animation, Advanced JS: Games and Visualizations, and most of Advanced JS: Natural Simulations.\n\nI'm from Round Rock, TX, and am a homeschooler in 8th Grade. What I love about programming is that the only limit is your imagination. When you make a game, per say, you can define crazy and outlandish forces that affect your character. Or you can create a new cipherer that uses some irrational number to make the input indecipherable. It's all up to you.\n\n**/\n\nsmooth();\nvar starttime = ((((((year() - 2000) * 12 + month()) * 31 + day()) * 24 + hour()) * 60) + minute()) * 60 + second();\n\nvar drawBackground = function() {\n    var whichShape = floor(frameCount / 300) % 21;\n    noStroke();\n    if (whichShape !== 9) {\n        background(20, 209, 219);\n    }\n    var ellipseSize = 10;\n    if (whichShape === 0) {\n        for (var i = 0; i < 40; i ++) {\n            for (var j = 0; j < 40; j ++) {\n                var x = (i * 5) * cos(j * 10 + i * 1 + frameCount);\n                var y = (i * 5) * sin(j * 10 + i * 1);\n                fill(i * 5, 0, j * 10);\n                ellipse(x + 200, y + 200, ellipseSize, ellipseSize);\n            }\n        }\n    } else if (whichShape === 1) {\n        for (var i = 0; i < 40; i ++) {\n            for (var j = 0; j < 40; j ++) {\n                var x = (i * 5) * cos(j * 10 + i * 3 + frameCount);\n                var y = (i * 5);\n                fill(i * 5, 0, j * 10);\n                ellipse(x + 200, y + 100, ellipseSize, ellipseSize);\n            }\n        }\n    } else if (whichShape === 2) {\n        for (var i = 0; i < 40; i ++) {\n            for (var j = 0; j < 40; j ++) {\n                var x = (i * 5) * cos(j * 10 + i * 1 + frameCount);\n                var y = (i * 5) * sin(j * 10 + i * 1 - frameCount);\n                fill(0);\n                ellipse(x + 200, y + 200, ellipseSize, ellipseSize);\n            }\n        }\n    } else if (whichShape === 3) {\n        for (var i = 0; i < 40; i ++) {\n            for (var j = 0; j < 40; j ++) {\n                var x = (i * 5) * cos(j * 10 + i * 2 + frameCount);\n                var y = (i * 5) * sin(j * 10 + i * 0.5 - frameCount);\n                var size = 1 * sin(frameCount) + i / 2;\n                fill(i * 5, 0, j * 10);\n                ellipse(x + 200, y + 200, size, size);\n            }\n        }\n    } else if (whichShape === 4) {\n        for (var i = 0; i < 40; i ++) {\n            for (var j = 0; j < 40; j ++) {\n                var x = (i * 5) * cos(j * 10 + i * frameCount);\n                var y = (i * 5) * sin(j * 10 + i * frameCount);\n                fill(i * 5, 0, j * 10);\n                ellipse(x + 200, y + 200, ellipseSize, ellipseSize);\n            }\n        }\n    } else if (whichShape === 5) {\n        for (var i = 0; i < 40; i ++) {\n            for (var j = 0; j < 40; j ++) {\n                var x = (i * 5) * cos(j * 10 + i * frameCount);\n                var y = (i * 5) * sin(j * 10 + i * 1);\n                fill(i * 5, 0, j * 10);\n                ellipse(x + 200, y + 200, ellipseSize, ellipseSize);\n            }\n        }\n    } else if (whichShape === 6) {\n        for (var i = 0; i < 40; i ++) {\n            for (var j = 0; j < 40; j ++) {\n                var x = (i * 5) * cos(j * 36 + i * 1);\n                var y = (i * 5) * sin(j * frameCount / 10 + i * 1);\n                fill(i * 5, 0, j * 10);\n                ellipse(x + 200, y + 200, ellipseSize, ellipseSize);\n            }\n        }\n    } else if (whichShape === 7) {\n        for (var i = 0; i < 40; i ++) {\n            for (var j = 0; j < 40; j ++) {\n                var x = (i * 5) * cos(j * frameCount / 10 + i / 100);\n                var y = (i * 5) * sin(j * 10 + i * 0.5);\n                fill(i * 5, 0, j * 10);\n                ellipse(x + 200, y + 200, 5, 5);\n            }\n        }\n    } else if (whichShape === 8) {\n        for (var i = 0; i < 40; i ++) {\n            for (var j = 0; j < 40; j ++) {\n                var x = (i * 5) * cos(j * frameCount / 20 + i * 0.5);\n                var y = (i * 5) * sin(j * 10 + i * frameCount / 3000);\n                fill(i * 5, 0, j * 10);\n                ellipse(x + 200, y + 200, 5, 5);\n            }\n        }\n    } else if (whichShape === 9) {\n        var circles = 300;\n        // clear the background\n        fill(0, 0, 0, 100);\n        rect(0, 0, width, height);\n        var time;\n        //time = starttime + millis() * 0.001;\n        time = starttime + millis() / 1000;\n        \n        for (var i = 1; i <= circles; i ++) {\n            \n            var s = i / circles;\n            \n            fill(255 * (1 - s), 255 * s, 255);\n            \n            var radius = (1 + sin((time * s) * 175 * 1.5)) * width / 5 + width / 20;\n            \n            var angle = (time * s) - 0.5 * time;\n            \n            ellipse(radius * cos(angle) + 200, radius * sin(angle) + 200, 5, 5);\n        }\n    } else if (whichShape === 10) {\n        background(0);\n        var x = 100 * sin(pow(frameCount, 1.01));\n        noFill();\n        stroke(255);\n        strokeWeight(3);\n        for (var i = 0; i < 15; i ++) {\n            ellipse(cos(x) * pow(i, 1.9) + 200, sin(x) * pow(i, 1.9) + 200, i * 15, i * 15);\n        }\n    } else if (whichShape === 11) {\n        for (var i = 0; i < 30; i ++) {\n            for (var j = 0; j < 15; j ++) {\n                var x = (i * 5) * cos(i + frameCount);\n                var y = (i * 5) * sin(j  + frameCount);\n                fill(i * 10, 0, j * 20);\n                ellipse(x + 200, y + 200, 5, 5);\n                ellipse(y + 200, x + 200, 5, 5);\n                ellipse(200 - x, 200 - y, 5, 5);\n                ellipse(200 - y, 200 - x, 5, 5);\n            }\n        }\n    } else if (whichShape === 12) {\n        background(0);\n        for (var i = 0; i < 75; i ++) {\n            noFill();\n            stroke(0, 0, 50 * sin(i * 10) + 100);\n            strokeWeight(2);\n            var x = 100 * sin(i * 5);\n            var y = 100 * cos(i * 5);\n            var timesX = 1;\n            if (i % 2 === 0) {\n                timesX = -1;\n            }\n            \n            var timesY = cos(frameCount);\n            if (i % 2 === 0) {\n                timesY = sin(frameCount);\n            }\n            \n            ellipse(timesX * x + 200, timesY * y + 200, 20, 20);\n        }\n    } else if (whichShape === 13) {\n        background(0);\n        for (var i = 0; i < 400; i ++) {\n            noFill();\n            stroke(0, 0, 50 * sin(i * 10) + 100);\n            strokeWeight(2);\n            noStroke();\n            fill(0, 0, 50 * sin(i * 10) + 100);\n            var x = 100 * sin(i * 1);\n            var y = 100 * cos(i * 5);\n            var timesX = 1;\n            \n            var timesY = cos(frameCount);\n            \n            ellipse(timesX * x + 200, timesY * y + 200, 20, 20);\n        }\n    } else if (whichShape === 14) {\n        background(0);\n        for (var i = 0; i < 1000; i ++) {\n            noFill();\n            stroke(0, 0, 50 * sin(i * 10) + 100);\n            strokeWeight(2);\n            noStroke();\n            fill(0, 0, 50 * sin(i * 10) + 130);\n            var x = 100 * sin(i * 1);\n            var y = 100 * cos(i * 5);\n            var timesX = 1;\n            \n            var timesY = cos(i * sin(frameCount) + frameCount);\n            \n            ellipse(timesX * x + 200, timesY * y + 200, 20, 20);\n        }\n    } else if (whichShape === 15) {\n        background(0);\n        for (var i = 0; i < 75; i ++) {\n            noFill();\n            stroke(0, 0, 50 * sin(i * 10) + 100);\n            strokeWeight(2);\n            var x = 100 * sin(i * 5);\n            var y = 100 * cos(i * 5) - 90;\n            var timesX = 1;\n            if (i % 2 === 0) {\n                timesX = -1;\n            }\n            \n            var timesY = cos(frameCount);\n            if (i % 2 === 0) {\n                timesY = sin(frameCount);\n            }\n            \n            ellipse(timesX * x + 200, timesY * y + 200, 20, 20);\n            ellipse(timesX * -x + 200, timesY * -y + 200, 20, 20);\n        }\n    } else if (whichShape === 16) {\n        background(0);\n        for (var i = 0; i < 75; i ++) {\n            noFill();\n            stroke(0, 0, 50 * sin(i * 10) + 100);\n            strokeWeight(2);\n            var x = 100 * sin(i * 5) + 45;\n            var y = 100 * cos(i * 5 + 45) + 45;\n            var timesX = 1;\n            if (i % 2 === 0) {\n                timesX = -1;\n            }\n            \n            var timesY = cos(frameCount);\n            if (i % 2 === 0) {\n                timesY = sin(frameCount);\n            }\n            \n            ellipse(timesX * x + 200, timesY * y + 200, 20, 20);\n            ellipse(timesX * -x + 200, timesY * -y + 200, 20, 20);\n            ellipse(timesX * -x + 200, timesY * y + 200, 20, 20);\n            ellipse(timesX * x + 200, timesY * -y + 200, 20, 20);\n        }\n    } else if (whichShape === 17) {\n        background(0);\n        for (var i = 0; i < 75; i ++) {\n            noFill();\n            stroke(0, 0, 50 * sin(i * 10) + 100);\n            strokeWeight(2);\n            var x = 100 * sin(i * 5 + 60);\n            var y = 100 * cos(i * 5 + 30);\n            var timesX = sin(frameCount);\n            if (i % 2 === 0) {\n                timesX = -cos(frameCount);\n            }\n            \n            var timesY = cos(frameCount);\n            if (i % 2 === 0) {\n                timesY = sin(frameCount);\n            }\n            \n            ellipse(timesX * x + 200, timesY * y + 200, 20, 20);\n            ellipse(timesX * -x + 200, timesY * y + 200, 20, 20);\n        }\n    } else if (whichShape === 18) {\n        background(0);\n        for (var i = 0; i < 75; i ++) {\n            noFill();\n            stroke(10 * i);\n            strokeWeight(2);\n            var x = 100 * sin(i * 5 + 60);\n            var y = 100 * cos(i * 5 + 30);\n            var timesX = sin(frameCount);\n            if (i % 2 === 0) {\n                timesX = -cos(frameCount);\n            }\n            \n            var timesY = cos(frameCount);\n            if (i % 2 === 0) {\n                timesY = sin(frameCount);\n            }\n            \n            ellipse(timesX * x + 200, timesY * y + 200, 20, 20);\n            ellipse(timesX * -x + 200, timesY * y + 200, 20, 20);\n        }\n    } else if (whichShape === 19) {\n        background(0);\n        for (var i = 0; i < 200; i ++) {\n            var x = (i * 0.75) * cos(i * 20 + frameCount);\n            var y = (i * 0.75) * sin(i * 10 + frameCount);\n            noFill();\n            stroke(0, 10 * sin(i) + 100, i);\n            strokeWeight(1);\n            ellipse(x + 200, y + 200, 20, 20);\n        }\n    } else if (whichShape === 20) {\n        background(0);\n        for (var i = 0; i < 72; i ++) {\n            noFill();\n            stroke(0, 0, 50 * sin(i * 10) + 100);\n            strokeWeight(2);\n            var x = 100 * sin(i * 5) + 50;\n            var y = 100 * cos(i * 5);\n            var timesX = cos(frameCount + sin(frameCount));\n            var timesY = cos(frameCount + sin(frameCount));\n            \n            ellipse(timesX * x + 200, timesY * y + 200, 20, 20);\n        }\n    }\n};\n\nvar draw = function() {\n    drawBackground();\n};", "created": "2015-06-22T06:18:58Z", "folds": [[18, 20], [22, 30], [31, 39], [40, 48], [49, 58], [59, 67], [68, 76], [77, 85], [86, 94], [95, 103], [104, 124], [125, 133], [134, 145], [146, 165], [166, 181], [182, 197], [198, 218], [219, 241], [242, 262], [263, 283], [284, 293], [294, 307]], "translatedMp3Url": "", "hasAudio": false, "mp3Url": "", "editorType": "ace_pjs", "playback": "", "youtubeId": null, "configVersion": 4, "id": 5733935958982656}, "tests": "", "imagePath": "/computer-programming/trigonometry-art/5087108303814656/5733935958982656.png", "nodeType": "scratchpad", "editSlug": "edit/p/trigonometry-art", "isProject": false, "tags": [], "translatedDescription": "", "byChild": false, "difficulty": -1, "translatedTests": "", "key": "ag5zfmtoYW4tYWNhZGVteXIXCxIKU2NyYXRjaHBhZBiAgIibq9aECQw", "canvasOnly": false, "nodeSlug": "p/trigonometry-art", "kind": "Scratchpad", "termMap": {"new": "New Program", "guidelines": "Program Guidelines", "restart": "Restart"}, "globalId": "p5087108303814656", "translatedDescriptionHtml": "", "created": "2015-06-16T12:09:17Z", "url": "https://www.khanacademy.org/computer-programming/trigonometry-art/5087108303814656", "imageUrl": "https://www.khanacademy.org/computer-programming/trigonometry-art/5087108303814656/5733935958982656.png", "originIsProject": false, "sumVotesIncremented": 4, "defaultUrlPath": null, "flags": [], "relativeUrl": "/computer-programming/trigonometry-art/5087108303814656", "isProjectOrFork": false, "userAuthoredContentType": "pjs", "kaid": "kaid_989806465670076277524020", "translatedTitle": "Trigonometry Art!"}, "embedded": false, "creatorProfile": {"isSelf": false, "username": "jswood", "isParentOfLoggedInUser": false, "background": {"translatedDisplayName": "Cosmos", "imagePath": "/images/profile/backgrounds/bg-cosmos.jpg", "displayName": "Cosmos", "name": "cosmos", "thumbSrc": "https://cdn.kastatic.org/images/profile/backgrounds/bg-cosmos-preview.png", "translatedRequirements": ["Earn 1,000,000 energy points"], "rewardType": "profile_background", "thumbnailSrc": "https://cdn.kastatic.org/images/profile/backgrounds/bg-cosmos.jpg", "imageSrc": "https://cdn.kastatic.org/images/profile/backgrounds/bg-cosmos.jpg", "thumbPath": "/images/profile/backgrounds/bg-cosmos-preview.png", "thumbnailPath": ""}, "hasChangedAvatar": true, "soundOn": false, "followRequiresApproval": true, "canModifyCoaches": true, "dateJoined": "2014-02-07T17:39:43Z", "backgroundSrc": "https://cdn.kastatic.org/images/profile/backgrounds/bg-cosmos.jpg", "isChildAccount": false, "isCreator": false, "childPageRoot": "/parent/child/jswood/", "isCurator": false, "isDeveloper": false, "isCoachingLoggedInUser": false, "avatarName": "leaf_blue_style", "affiliations": [], "isModerator": false, "canEvalCsProjects": true, "globalPermissions": [], "profileRoot": "/profile/jswood/", "email": "", "countVideosCompleted": 265, "bio": "Chess, Programming, Swim Team. Need I say more?", "hasStudents": false, "countBrandNewNotifications": 0, "isActivityAccessible": false, "isOrphan": false, "isPublic": true, "canHellban": false, "isPhantom": false, "backgroundName": "cosmos", "isDataCollectible": false, "nickname": "FUSION BLAST", "canMessageUsers": false, "canCreateOfficialClarifications": false, "publicBadges": [{"absoluteUrl": "https://www.khanacademy.org/badges/ludicrous-streak", "isRetired": false, "isOwned": false, "translatedSafeExtendedDescription": "Correctly answer 100 problems in a row in a single skill", "icons": {"large": "https://cdn.kastatic.org/images/badges/moon/ludicrous-streak-512x512.png", "compact": "https://cdn.kastatic.org/images/badges/moon/ludicrous-streak-60x60.png", "small": "https://cdn.kastatic.org/images/badges/moon/ludicrous-streak-40x40.png", "email": "https://cdn.kastatic.org/images/badges/moon/ludicrous-streak-70x70.png"}, "relativeUrl": "/badges/ludicrous-streak", "description": "Ludicrous Streak", "translatedDescription": "Ludicrous Streak", "badgeCategory": 1, "safeExtendedDescription": "Correctly answer 100 problems in a row in a single skill", "points": 0, "iconSrc": "https://cdn.kastatic.org/images/badges/moon/ludicrous-streak-40x40.png", "hideContext": false, "slug": "ludicrous-streak", "name": "ludicrousstreakbadge"}, {"absoluteUrl": "https://www.khanacademy.org/badges/contest-eco-interactions", "isRetired": false, "isOwned": false, "translatedSafeExtendedDescription": " One of the top winners of the Ecological Interactions contest of April 2015.", "icons": {"large": "/images/badges/sun/golden-winston-70x70.png", "compact": "/images/badges/sun/golden-winston-70x70.png", "small": "/images/badges/sun/golden-winston-70x70.png", "email": "https://cdn.kastatic.org/images/badges/sun-70x70.png"}, "relativeUrl": "/badges/contest-eco-interactions", "description": "Contest: Eco Interactions", "translatedDescription": "Contest: Eco Interactions", "badgeCategory": 3, "safeExtendedDescription": " One of the top winners of the Ecological Interactions contest of April 2015.", "points": 200, "iconSrc": "/images/badges/sun/golden-winston-70x70.png", "hideContext": false, "slug": "contest-eco-interactions", "name": "Contest - Eco Interactions"}, {"absoluteUrl": "https://www.khanacademy.org/badges/299792458-meters-per-second", "isRetired": false, "isOwned": false, "translatedSafeExtendedDescription": "Quickly & correctly answer 75 skill problems in a row (time limit depends on skill difficulty)", "icons": {"large": "https://cdn.kastatic.org/images/badges/earth/299-meters-512x512.png", "compact": "https://cdn.kastatic.org/images/badges/earth/299-meters-60x60.png", "small": "https://cdn.kastatic.org/images/badges/earth/299-meters-40x40.png", "email": "https://cdn.kastatic.org/images/badges/earth/299-meters-70x70.png"}, "relativeUrl": "/badges/299792458-meters-per-second", "description": "299,792,458 Meters per Second", "translatedDescription": "299,792,458 Meters per Second", "badgeCategory": 2, "safeExtendedDescription": "Quickly & correctly answer 75 skill problems in a row (time limit depends on skill difficulty)", "points": 5000, "iconSrc": "https://cdn.kastatic.org/images/badges/earth/299-meters-40x40.png", "hideContext": false, "slug": "299792458-meters-per-second", "name": "ludicroustimedproblembadge"}, {"absoluteUrl": "https://www.khanacademy.org/badges/millionaire", "isRetired": false, "isOwned": false, "translatedSafeExtendedDescription": "Earn 1,000,000 energy points", "icons": {"large": "https://cdn.kastatic.org/images/badges/sun/millionaire-512x512.png", "compact": "https://cdn.kastatic.org/images/badges/sun/millionaire-60x60.png", "small": "https://cdn.kastatic.org/images/badges/sun/millionaire-40x40.png", "email": "https://cdn.kastatic.org/images/badges/sun/millionaire-70x70.png"}, "relativeUrl": "/badges/millionaire", "description": "Millionaire", "translatedDescription": "Millionaire", "badgeCategory": 3, "safeExtendedDescription": "Earn 1,000,000 energy points", "points": 0, "iconSrc": "https://cdn.kastatic.org/images/badges/sun/millionaire-40x40.png", "hideContext": false, "slug": "millionaire", "name": "millionairebadge"}, {"absoluteUrl": "https://www.khanacademy.org/badges/hypatia", "isRetired": false, "isOwned": false, "translatedSafeExtendedDescription": "Achieve mastery in 350 unique skills", "icons": {"large": "https://cdn.kastatic.org/images/badges/sun/hypatia-512x512.png", "compact": "https://cdn.kastatic.org/images/badges/sun/hypatia-60x60.png", "small": "https://cdn.kastatic.org/images/badges/sun/hypatia-40x40.png", "email": "https://cdn.kastatic.org/images/badges/sun/hypatia-70x70.png"}, "relativeUrl": "/badges/hypatia", "description": "Hypatia", "translatedDescription": "Hypatia", "badgeCategory": 3, "safeExtendedDescription": "Achieve mastery in 350 unique skills", "points": 125000, "iconSrc": "https://cdn.kastatic.org/images/badges/sun/hypatia-40x40.png", "hideContext": false, "slug": "hypatia", "name": "hypatiamasterybadge"}], "moderatorLevel": 0, "restrictedDomain": null, "allowedByParentToAddAnyCoach": true, "avatarSrc": "https://cdn.kastatic.org/images/avatars/svg/leaf-blue.svg", "kaid": "kaid_989806465670076277524020", "userLocation": {"city": "", "country": "", "googlePlacesId": "", "state": "", "displayText": "", "lastModified": "2015-06-19T18:56:32Z", "postalCode": ""}, "canRecordTutorial": false, "points": 1018075, "avatar": {"translatedDisplayName": "Leaf (Blue)", "imagePath": "/images/avatars/svg/leaf-blue.svg", "displayName": "Leaf (Blue)", "name": "leaf_blue_style", "partType": "style", "forModel": "leaf", "translatedRequirements": [], "rewardType": "avatar_reward", "thumbnailSrc": "https://cdn.kastatic.org/images/avatars/svg/leaf-blue.svg", "imageSrc": "https://cdn.kastatic.org/images/avatars/svg/leaf-blue.svg", "thumbnailPath": ""}, "includesUserDataInfo": true, "isPublisher": false}, "discussion": {"showProjectFeedback": true, "loggedIn": false, "isDeveloper": false, "communityQuestionsTitle": "Computer Science", "isVideo": false, "translatedCommunityQuestionsTitle": "Computer Science", "focusId": "5087108303814656", "isOwner": false, "restrictPosting": false, "which": "scratchpad-questions", "focusKind": "scratchpad", "canRequestFeedback": false, "communityQuestionsUrl": "/computer-programming/d", "canEdit": false, "showDocumentation": true, "showSpinoffs": true}, "upVoted": false, "originScratchpad": {"category": "official", "deleted": false, "imageUrl": "https://www.khanacademy.org/computer-programming/contest-generative-art/6223097608929280/5649050225344512.png", "sendToPeers": false, "translatedDescription": "", "projectEval": null, "slug": "contest-generative-art", "url": "https://www.khanacademy.org/computer-programming/contest-generative-art/6223097608929280", "revision": {"id": 5649050225344512}, "id": 6223097608929280, "translatedTitle": "Contest: Generative Art"}, "flaggedByUser": false, "downVoted": false, "userScratchpad": {"kind": "UserScratchpad", "msWatched": 0, "msDuration": null, "isProject": false, "lastMsWatched": 0, "challengeStatus": -1, "scratchpadKey": "ag5zfmtoYW4tYWNhZGVteXIXCxIKU2NyYXRjaHBhZBiAgIibq9aECQw", "fullyWatched": false, "isComplete": false, "isChallenge": false, "difficulty": -1, "points": 0, "stashedCode": "", "key": "ag5zfmtoYW4tYWNhZGVteXKuAQsSDlVzZXJTY3JhdGNocGFkIpkBYWc1emZtdG9ZVzR0WVdOaFpHVnRlWEpVQ3hJSVZYTmxja1JoZEdFaVJuVnpaWEpmYVdSZmEyVjVYMmgwZEhBNkx5OXBaQzVyYUdGdVlXTmhaR1Z0ZVM1dmNtY3ZOVGN3WVdWbE1qZ3hZVGhqTkdFNU5XRXhNR0l5T0RjM1lqazNOVGxtTkRBTTo1MDg3MTA4MzAzODE0NjU2DA", "userKey": "ag5zfmtoYW4tYWNhZGVteXJUCxIIVXNlckRhdGEiRnVzZXJfaWRfa2V5X2h0dHA6Ly9pZC5raGFuYWNhZGVteS5vcmcvNTcwYWVlMjgxYThjNGE5NWExMGIyODc3Yjk3NTlmNDAM", "id": "ag5zfmtoYW4tYWNhZGVteXJUCxIIVXNlckRhdGEiRnVzZXJfaWRfa2V5X2h0dHA6Ly9pZC5raGFuYWNhZGVteS5vcmcvNTcwYWVlMjgxYThjNGE5NWExMGIyODc3Yjk3NTlmNDAM:5087108303814656", "viewed": true}}