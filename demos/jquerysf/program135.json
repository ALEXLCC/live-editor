{"scratchpad": {"guidelinesUrlPath": "/cs/guidelines/pjs", "contentKindCode": "p", "newUrlPath": "/cs/new/pjs", "key": "ag5zfmtoYW4tYWNhZGVteXIXCxIKU2NyYXRjaHBhZBiAgOCg4d-_CAw", "spinoffCount": 1, "originScratchpadId": null, "projectEval": null, "height": 400, "date": "2015-06-18T17:29:43Z", "originSimilarity": 0.0, "id": 4783966839635968, "definitelyNotSpam": false, "editSlug": "edit/p/visualizerby-jeshurun-horton", "category": null, "originRevisionId": null, "title": "Visualizer(by Jeshurun Horton)", "translatedProjectEval": null, "sendToPeers": false, "nodeSlug": "p/visualizerby-jeshurun-horton", "isChallenge": false, "width": 400, "descriptionHtml": "", "youtubeId": null, "docsUrlPath": "/cs/docs/pjs", "contentKind": "Scratchpad", "type": "scratchpad", "revision": {"tests": null, "code": "//Visualizer(by Jeshurun Horton)\n\n//Hi! My name is Jeshurun Horton. I just finished 10th grade in high school, and I live in Arkansas.\n\n/**What do I love about programming?**/\n\n//What I most love about programming is the ability to design and build whatever you want with a little practice. Building, math, and codes are some of my favorite things, and computer programming puts them all together.\n\nvar frenzy = false;\nvar caterpillars = false;\n\nbackground(0, 0, 0);\nvar sliderX = 135;\nvar trail = 0;\nvar fadenum = 0;\nvar fadelevel = 1;\nvar pulsenum = 1;\nvar pulsespeed = 0.5;//0.3, 0\nvar randompulse = 1;\nvar randomaction = 1;\nvar effectsnum = 0;\nvar respawn = 0;\nvar introTime = 0;\nvar page = 0;\n\nvar ball = function(x,y,e,c1,c2,c3,s,p){\n    this.xPos = x;\n    this.yPos = y;\n    this.Eangle=e;\n    this.color1=c1;\n    this.color2=c2;\n    this.color3=c3;\n    this.size=s;\n    this.pulse=p;\n    this.explode=false;\n    this.efade=0;\n    this.r = 0;\n    this.yF = 0;\n};\n\nball.prototype.draw = function() {\n    if(frenzy === true){\n        fill(random(0, 30), random(0, 50), random(0, 255));\n    }else{\n        fill(this.color1, this.color2, this.color3, this.size*4 + 25 + this.efade);\n    }\n    if(caterpillars === true){\n    this.size = random(5, 30);\n    }\n        this.pulse += 1;\n        if(this.pulse > 0 && this.pulse < 50){\n            this.size += pulsespeed;\n        }\n        if(this.pulse > 100 && this.pulse < 150){\n            this.size -= pulsespeed;\n        }\n        if(this.pulse > 200){\n            this.pulse = pulsespeed;\n        }\n        \n        noStroke();\n        if(!this.explode){\n        ellipse(this.xPos, this.yPos, this.size, this.size);\n        fill(255, 255, 255, this.size/40);\n        ellipse(this.xPos - this.size/10, this.yPos - this.size/10, this.size*3/5, this.size*3/5);\n        ellipse(this.xPos - this.size/10, this.yPos - this.size/10, this.size*1/2, this.size*1/2);\n        ellipse(this.xPos - this.size/10, this.yPos - this.size/10, this.size*2/5, this.size*2/5);\n        ellipse(this.xPos - this.size/10, this.yPos - this.size/10, this.size*3/10, this.size*3/10);\n        }else{\n            translate(this.xPos, this.yPos);\n            for(var i = 0; i < 20; i++){\n                ellipse(cos(i*18)*this.r, sin(i*18)*this.r, this.size/4, this.size/4);\n            }\n            resetMatrix();\n            if(this.r > 300){\n                this.r = 0;\n                this.efade = 0;\n                this.explode = false;\n                this.xPos = 200;\n                this.yPos = 200;\n                this.yF = 0;\n            }\n        }\n};\n\nball.prototype.update = function(lmax1, lmax2) {\n        var x = 0;\n        var y = 0;\n        var randomX = 0;\n        var randomY = 0;\n\n        this.Eangle += random(lmax1, lmax2);\n        randomX = this.xPos - 50*sin(this.Eangle);\n        randomY = this.yPos - 50*cos(this.Eangle);\n\n        x = randomX - this.xPos;\n        y = randomY - this.yPos;\n        //slope = y/x;\n        if(!this.explode){\n        this.xPos += x/20;\n        this.yPos += y/20;\n        }else{\n            this.yPos += this.yF;\n            this.yF += 0.01;\n        }\n        if(this.xPos < 7 || this.xPos > 393 || this.yPos < 7 || this.yPos > 393){\n            this.Eangle += 180;\n        }\n        if(this.explode){\n            //caterpillars = false;\n            //frenzy = false;\n            this.r += 1;\n            this.efade -= 1;\n        }\n};\n\nvar balls=[];\nfor(var i = 0; i < 20; i++){\nballs.push(new ball(200, 200,random(0, 360), random(0, 30), random(0, 50), random(0, 255),random(10, 30), random(1, 199)));\n}\nvar slope = 0;\n\nvar frameskip = 0;\nvar max1 = 0;\nvar max2 = 0;\n\nvar IntroPixel = function(landX, landY, c){\n    this.spawnAngle = random(1, 360);//Angle around center where pixel is spawned\n    this.x = 250*cos(this.spawnAngle) + 200;//This trig stuff determines where x starts.\n    this.y = 250*sin(this.spawnAngle) + 200;//This stuff determines where y starts.\n    this.Clr = c;//Pixel color\n    this.landPointX = landX;//Final stopping place (x)\n    this.landPointY = landY;//Final stopping place (y)\n    this.dirCalcX = 0;//X increase or decrease amount\n    this.dirCalcY = 0;//Y increase or decrease amount\n    this.speed = random(10, 40);//Speed of increase or decrease\n};//Define IntroPixel variables\nIntroPixel.prototype.draw = function(){\n    noStroke();\n    fill(this.Clr);\n    rect(this.x, this.y, 5, 5);\n};//Draw IntroPixel\nIntroPixel.prototype.update = function(){\n    this.dirCalcX = -(this.x - this.landPointX)/this.speed;//Find x-distance between the two points, make it negative, and divide it by the speed.\n    this.dirCalcY = -(this.y - this.landPointY)/this.speed;//Find y-distance between the two points, make it negative, and divide it by the speed.\n    this.x += this.dirCalcX;//Increase x \n    this.y += this.dirCalcY;//Increase y\n};//Update IntroPixel\nvar pixels = [];//Pixels array\nfor(var i = 0; i < 1; i++){\n//The gecko\npixels.push(new IntroPixel(255, 130, color(0, 150, 0)));\npixels.push(new IntroPixel(255, 135, color(0, 150, 0)));\npixels.push(new IntroPixel(250, 130, color(0, 150, 0)));\npixels.push(new IntroPixel(250, 135, color(0, 200, 0)));\npixels.push(new IntroPixel(255, 140, color(0, 150, 0)));\npixels.push(new IntroPixel(255, 145, color(0, 150, 0)));\npixels.push(new IntroPixel(245, 130, color(0, 150, 0)));\npixels.push(new IntroPixel(240, 130, color(0, 150, 0)));\npixels.push(new IntroPixel(250, 150, color(0, 150, 0)));\npixels.push(new IntroPixel(235, 135, color(0, 150, 0)));\npixels.push(new IntroPixel(245, 150, color(0, 150, 0)));\npixels.push(new IntroPixel(235, 140, color(0, 150, 0)));\npixels.push(new IntroPixel(240, 135, color(200, 0, 0)));\npixels.push(new IntroPixel(250, 145, color(200, 0, 0)));\npixels.push(new IntroPixel(245, 135, color(0, 150, 0)));\npixels.push(new IntroPixel(250, 140, color(0, 150, 0)));\npixels.push(new IntroPixel(240, 140, color(0, 150, 0)));\npixels.push(new IntroPixel(245, 145, color(0, 150, 0)));\npixels.push(new IntroPixel(245, 140, color(0, 200, 0)));\npixels.push(new IntroPixel(240, 145, color(0, 200, 0)));\npixels.push(new IntroPixel(245, 145, color(0, 150, 0)));\npixels.push(new IntroPixel(240, 140, color(0, 150, 0)));\npixels.push(new IntroPixel(240, 150, color(0, 150, 0)));\npixels.push(new IntroPixel(235, 145, color(0, 150, 0)));\npixels.push(new IntroPixel(235, 150, color(255, 100, 0)));\npixels.push(new IntroPixel(230, 155, color(255, 100, 0)));\npixels.push(new IntroPixel(225, 160, color(255, 100, 0)));\npixels.push(new IntroPixel(220, 165, color(255, 100, 0)));\npixels.push(new IntroPixel(215, 170, color(255, 100, 0)));\npixels.push(new IntroPixel(210, 175, color(255, 100, 0)));\npixels.push(new IntroPixel(205, 180, color(255, 100, 0)));\npixels.push(new IntroPixel(200, 185, color(255, 100, 0)));\npixels.push(new IntroPixel(195, 190, color(255, 100, 0)));\npixels.push(new IntroPixel(190, 190, color(255, 100, 0)));\npixels.push(new IntroPixel(185, 190, color(255, 100, 0)));\npixels.push(new IntroPixel(180, 190, color(255, 100, 0)));\npixels.push(new IntroPixel(175, 190, color(255, 100, 0)));\npixels.push(new IntroPixel(170, 185, color(255, 100, 0)));\npixels.push(new IntroPixel(165, 180, color(255, 100, 0)));\npixels.push(new IntroPixel(165, 175, color(255, 100, 0)));\npixels.push(new IntroPixel(165, 170, color(255, 100, 0)));\npixels.push(new IntroPixel(165, 165, color(255, 100, 0)));\npixels.push(new IntroPixel(170, 160, color(255, 100, 0)));\npixels.push(new IntroPixel(175, 155, color(255, 100, 0)));\npixels.push(new IntroPixel(180, 155, color(255, 100, 0)));\npixels.push(new IntroPixel(230, 150, color(0, 150, 0)));\npixels.push(new IntroPixel(235, 155, color(0, 150, 0)));\npixels.push(new IntroPixel(230, 145, color(0, 150, 0)));\npixels.push(new IntroPixel(240, 155, color(0, 150, 0)));\npixels.push(new IntroPixel(225, 150, color(0, 150, 0)));\npixels.push(new IntroPixel(235, 160, color(0, 150, 0)));\npixels.push(new IntroPixel(235, 165, color(0, 130, 0)));\npixels.push(new IntroPixel(240, 170, color(0, 130, 0)));\npixels.push(new IntroPixel(235, 170, color(0, 130, 0)));\npixels.push(new IntroPixel(245, 170, color(0, 130, 0)));\npixels.push(new IntroPixel(250, 170, color(0, 130, 0)));\npixels.push(new IntroPixel(255, 170, color(0, 130, 0)));\npixels.push(new IntroPixel(260, 170, color(0, 130, 0)));\npixels.push(new IntroPixel(250, 165, color(0, 130, 0)));\npixels.push(new IntroPixel(250, 175, color(0, 130, 0)));\npixels.push(new IntroPixel(255, 160, color(0, 130, 0)));\npixels.push(new IntroPixel(255, 180, color(0, 130, 0)));\npixels.push(new IntroPixel(230, 165, color(0, 150, 0)));\npixels.push(new IntroPixel(225, 170, color(0, 150, 0)));\npixels.push(new IntroPixel(220, 175, color(0, 150, 0)));\npixels.push(new IntroPixel(215, 180, color(0, 150, 0)));\npixels.push(new IntroPixel(210, 185, color(0, 150, 0)));\npixels.push(new IntroPixel(220, 155, color(0, 150, 0)));\npixels.push(new IntroPixel(215, 160, color(0, 150, 0)));\npixels.push(new IntroPixel(210, 165, color(0, 150, 0)));\npixels.push(new IntroPixel(205, 170, color(0, 150, 0)));\npixels.push(new IntroPixel(200, 175, color(0, 150, 0)));\npixels.push(new IntroPixel(195, 180, color(0, 150, 0)));\npixels.push(new IntroPixel(190, 180, color(0, 150, 0)));\npixels.push(new IntroPixel(175, 160, color(0, 150, 0)));\npixels.push(new IntroPixel(180, 185, color(0, 150, 0)));\npixels.push(new IntroPixel(180, 160, color(0, 150, 0)));\npixels.push(new IntroPixel(185, 155, color(0, 150, 0)));\npixels.push(new IntroPixel(190, 155, color(0, 150, 0)));\npixels.push(new IntroPixel(180, 150, color(0, 150, 0)));\npixels.push(new IntroPixel(175, 150, color(0, 150, 0)));\npixels.push(new IntroPixel(170, 155, color(0, 150, 0)));\npixels.push(new IntroPixel(165, 160, color(0, 150, 0)));\npixels.push(new IntroPixel(160, 165, color(0, 150, 0)));\npixels.push(new IntroPixel(205, 190, color(0, 150, 0)));\npixels.push(new IntroPixel(200, 195, color(0, 150, 0)));\npixels.push(new IntroPixel(195, 195, color(0, 150, 0)));\npixels.push(new IntroPixel(190, 195, color(0, 150, 0)));\npixels.push(new IntroPixel(185, 195, color(0, 150, 0)));\npixels.push(new IntroPixel(180, 195, color(0, 150, 0)));\npixels.push(new IntroPixel(175, 195, color(0, 150, 0)));\npixels.push(new IntroPixel(170, 190, color(0, 150, 0)));\npixels.push(new IntroPixel(165, 185, color(0, 150, 0)));\npixels.push(new IntroPixel(160, 180, color(0, 150, 0)));\npixels.push(new IntroPixel(160, 175, color(0, 150, 0)));\npixels.push(new IntroPixel(160, 170, color(0, 150, 0)));\npixels.push(new IntroPixel(175, 185, color(0, 150, 0)));\npixels.push(new IntroPixel(170, 170, color(0, 150, 0)));\npixels.push(new IntroPixel(170, 175, color(0, 150, 0)));\npixels.push(new IntroPixel(180, 185, color(0, 150, 0)));\npixels.push(new IntroPixel(170, 180, color(0, 150, 0)));\npixels.push(new IntroPixel(170, 165, color(0, 150, 0)));\npixels.push(new IntroPixel(175, 180, color(0, 150, 0)));\npixels.push(new IntroPixel(175, 185, color(0, 150, 0)));\npixels.push(new IntroPixel(180, 185, color(0, 150, 0)));\npixels.push(new IntroPixel(185, 185, color(0, 150, 0)));\npixels.push(new IntroPixel(190, 185, color(0, 150, 0)));\npixels.push(new IntroPixel(185, 150, color(0, 150, 0)));\npixels.push(new IntroPixel(200, 190, color(0, 150, 0)));\npixels.push(new IntroPixel(205, 185, color(0, 150, 0)));\npixels.push(new IntroPixel(210, 180, color(0, 150, 0)));\npixels.push(new IntroPixel(215, 175, color(0, 150, 0)));\npixels.push(new IntroPixel(220, 170, color(0, 150, 0)));\npixels.push(new IntroPixel(225, 165, color(0, 150, 0)));\npixels.push(new IntroPixel(230, 160, color(0, 150, 0)));\npixels.push(new IntroPixel(195, 185, color(0, 150, 0)));\npixels.push(new IntroPixel(200, 180, color(0, 150, 0)));\npixels.push(new IntroPixel(205, 175, color(0, 150, 0)));\npixels.push(new IntroPixel(210, 170, color(0, 150, 0)));\npixels.push(new IntroPixel(215, 165, color(0, 150, 0)));\npixels.push(new IntroPixel(220, 160, color(0, 150, 0)));\npixels.push(new IntroPixel(225, 155, color(0, 150, 0)));\npixels.push(new IntroPixel(200, 170, color(0, 130, 0)));\npixels.push(new IntroPixel(200, 165, color(0, 130, 0)));\npixels.push(new IntroPixel(195, 165, color(0, 130, 0)));\npixels.push(new IntroPixel(195, 160, color(0, 130, 0)));\npixels.push(new IntroPixel(190, 170, color(0, 130, 0)));\npixels.push(new IntroPixel(190, 165, color(0, 130, 0)));\npixels.push(new IntroPixel(185, 170, color(0, 130, 0)));\npixels.push(new IntroPixel(220, 205, color(0, 130, 0)));\npixels.push(new IntroPixel(220, 200, color(0, 130, 0)));\npixels.push(new IntroPixel(220, 195, color(0, 130, 0)));\npixels.push(new IntroPixel(220, 190, color(0, 130, 0)));\npixels.push(new IntroPixel(220, 185, color(0, 130, 0)));\npixels.push(new IntroPixel(215, 185, color(0, 130, 0)));\npixels.push(new IntroPixel(215, 195, color(0, 130, 0)));\npixels.push(new IntroPixel(210, 200, color(0, 130, 0)));\npixels.push(new IntroPixel(225, 195, color(0, 130, 0)));\npixels.push(new IntroPixel(230, 200, color(0, 130, 0)));\npixels.push(new IntroPixel(220, 150, color(0, 130, 0)));\npixels.push(new IntroPixel(215, 150, color(0, 130, 0)));\npixels.push(new IntroPixel(210, 145, color(0, 130, 0)));\npixels.push(new IntroPixel(205, 140, color(0, 130, 0)));\npixels.push(new IntroPixel(215, 145, color(0, 130, 0)));\npixels.push(new IntroPixel(210, 150, color(0, 130, 0)));\npixels.push(new IntroPixel(205, 150, color(0, 130, 0)));\npixels.push(new IntroPixel(215, 140, color(0, 130, 0)));\n}//Draw gecko\n\nvar draw = function() {\nswitch(page){\n    case 0:\n        textAlign(CENTER, CENTER);\n        introTime += 1;\n        fill(0, 0, 0, 20);\n        rect(0, 0, 400, 400);\n        fill(255, 255, 0, introTime - 200);\n        textSize(40);\n        text(\"GeckTech\", 200, 280);\n        \n        for(var i = 0; i < pixels.length; i++){\n            pixels[i].draw();\n            pixels[i].update();\n        }\n        if(introTime > 300){\n            page = 1;\n        }\n    break;\n    case 1:\n    fadenum += 1;\n    if(fadenum > 150){\n        fadenum = 0;\n        if(fadelevel > 1 && fadelevel < 5){\n        fadelevel += round(random(-1, 1));\n        }else if(fadelevel === 1){\n            fadelevel += round(random(0, 1));\n        }else if(fadelevel === 5){\n            fadelevel += round(random(-1, 0));\n        }\n    }\n    if(fadelevel === 1){\n        trail = 0;\n    }\n    if(fadelevel === 2){\n        trail = 10;\n    }\n    if(fadelevel === 3){\n        trail = 30;\n    }\n    if(fadelevel === 4){\n        trail = 90;\n    }\n    if(fadelevel === 5){\n        trail = 255;\n    }\n    fill(0, 0, 0, trail);\n    noStroke();\n    rect(0, 0, 400, 400);\n    effectsnum += 1;\n    if(effectsnum > 200){\n        randompulse = round(random(1, 3));\n        randomaction = round(random(1, 10));\n        effectsnum = 0;\n    }\n    if(randompulse === 1){\n       pulsespeed = 1; \n    }\n    if(randompulse === 2){\n       pulsespeed = 0.5; \n    }\n    if(randompulse === 3){\n       pulsespeed = 0; \n    }\n    var reset = function(){\n        frenzy = false;\n        caterpillars = false;\n    };\n    if(randomaction === 1){\n       reset(); \n    }\n    if(randomaction === 2){\n       reset(); \n    }\n    if(randomaction === 3){\n       reset(); \n    }\n    if(randomaction === 4){\n       caterpillars = true; \n    }\n    if(randomaction === 5){\n       frenzy = true; \n    }\n    if(randomaction === 6){\n       caterpillars = true;\n       frenzy = true;\n    }\n    if(randomaction === 7){\n        var n = round(random(0, balls.length - 1));\n        balls[n].explode = true;\n        randomaction = round(random(8, 9));\n    }\n    if(randomaction === 8){\n        var n = round(random(0, balls.length - 1));\n        balls[n].explode = true;\n        randomaction = round(random(8, 9));\n    }\n    if(randomaction === 9){\n       balls.push(new ball(random(100, 300), random(100, 300), 0, color(random(0, 30), random(0, 30), random(0, 255), random(50, 500)), 100));\n       effectsnum = 200;\n       \n    }\n    if(randomaction === 10){\n       reset();\n    }\n    if(balls.length > 35){\n        for(var i = 0; i < balls.length; i++){\n            balls[i].explode = true;\n        }\n        respawn += 1; \n        if(respawn >= 300){\n            respawn = 0;\n            var destroyed = [];\n            for(var i = 0; i < 15; i++){\n                destroyed.push(i);\n            }\n            for(var i = 0; i < destroyed.length; i++){\n                balls.splice(destroyed[i], 1);\n            }\n        }\n    }\n    frameskip += 1;\n    if(frameskip > 20){\n        max1 = random(0, 10);\n        max2 = random(0, -10);\n        frameskip = 0;\n    }\n\n    for (var i = 0; i < balls.length; i++) {\n        balls[i].update(max1, max2);\n        balls[i].draw(i);\n    }\n    break;\n}\n};\n", "created": "2015-06-18T17:29:43Z", "folds": [[25, 38], [40, 83], [85, 114], [126, 136], [137, 141], [142, 147], [149, 298]], "translatedMp3Url": null, "hasAudio": false, "mp3Url": null, "editorType": "ace_pjs", "playback": "", "youtubeId": null, "configVersion": 3, "id": 5634387206995968}, "tests": "", "imagePath": "/computer-programming/visualizerby-jeshurun-horton/4783966839635968/5634387206995968.png", "nodeType": "scratchpad", "description": "", "isProject": false, "tags": [], "translatedDescription": "", "byChild": false, "difficulty": null, "originIsProject": false, "termMap": {"new": "New Program", "guidelines": "Program Guidelines", "restart": "Restart"}, "hideFromHotlist": false, "canvasOnly": false, "slug": "visualizerby-jeshurun-horton", "kind": "Scratchpad", "translatedTests": "", "globalId": "p4783966839635968", "translatedDescriptionHtml": "", "created": "2014-07-12T21:20:56Z", "url": "https://www.khanacademy.org/computer-programming/visualizerby-jeshurun-horton/4783966839635968", "imageUrl": "https://www.khanacademy.org/computer-programming/visualizerby-jeshurun-horton/4783966839635968/5634387206995968.png", "isPublished": false, "sumVotesIncremented": 16, "defaultUrlPath": null, "flags": [], "relativeUrl": "/computer-programming/visualizerby-jeshurun-horton/4783966839635968", "isProjectOrFork": false, "userAuthoredContentType": "pjs", "kaid": "kaid_377771940089749709022333", "translatedTitle": "Visualizer(by Jeshurun Horton)"}, "embedded": false, "creatorProfile": {"isSelf": false, "username": "jeshurunhorton", "isParentOfLoggedInUser": false, "isCoachingLoggedInUser": false, "hasChangedAvatar": true, "soundOn": false, "followRequiresApproval": true, "canModifyCoaches": true, "dateJoined": "2013-09-11T14:45:37Z", "isCurator": false, "isChildAccount": false, "isPhantom": false, "isCreator": false, "childPageRoot": "/parent/child/jeshurunhorton/", "backgroundSrc": "https://cdn.kastatic.org/images/profile/backgrounds/bg-cosmos.jpg", "isDeveloper": false, "avatarName": "male_robot_hal_style", "affiliations": [], "isOrphan": false, "canEvalCsProjects": true, "globalPermissions": [], "profileRoot": "/profile/jeshurunhorton/", "email": "", "isPublic": true, "countVideosCompleted": 546, "bio": "I'm a spirit-filled, healed, redeemed, seated-with-Christ Christian that loves math, programming, music, building, and more! My motto: Design, Build, Activate!", "hasStudents": false, "countBrandNewNotifications": 0, "canCreateOfficialClarifications": false, "isModerator": false, "backgroundName": "cosmos", "canHellban": false, "isPublisher": false, "background": {"translatedDisplayName": "Cosmos", "imagePath": "/images/profile/backgrounds/bg-cosmos.jpg", "displayName": "Cosmos", "name": "cosmos", "thumbSrc": "https://cdn.kastatic.org/images/profile/backgrounds/bg-cosmos-preview.png", "translatedRequirements": ["Earn 1,000,000 energy points"], "rewardType": "profile_background", "thumbnailSrc": "https://cdn.kastatic.org/images/profile/backgrounds/bg-cosmos.jpg", "imageSrc": "https://cdn.kastatic.org/images/profile/backgrounds/bg-cosmos.jpg", "thumbPath": "/images/profile/backgrounds/bg-cosmos-preview.png", "thumbnailPath": ""}, "isDataCollectible": false, "nickname": "jeshurunhorton", "canMessageUsers": false, "isActivityAccessible": false, "publicBadges": [{"absoluteUrl": "https://www.khanacademy.org/badges/contest-organ-ic-code", "isRetired": false, "isOwned": false, "translatedSafeExtendedDescription": "One of the top winners of the 100% Organ-ic Code contest of May 2015.\r\n", "icons": {"large": "/images/badges/sun/golden-winston-70x70.png", "small": "/images/badges/sun/golden-winston-70x70.png", "email": "https://cdn.kastatic.org/images/badges/sun-70x70.png", "compact": "/images/badges/sun/golden-winston-70x70.png"}, "relativeUrl": "/badges/contest-organ-ic-code", "badgeCategory": 3, "description": "Contest: Organ-ic Code", "translatedDescription": "Contest: Organ-ic Code", "safeExtendedDescription": "One of the top winners of the 100% Organ-ic Code contest of May 2015.\r\n", "points": 200, "iconSrc": "/images/badges/sun/golden-winston-70x70.png", "hideContext": false, "slug": "contest-organ-ic-code", "name": "Contest - Organic Code"}, {"absoluteUrl": "https://www.khanacademy.org/badges/newton", "isRetired": false, "isOwned": false, "translatedSafeExtendedDescription": "Achieve mastery in 400 unique skills", "icons": {"large": "https://cdn.kastatic.org/images/badges/sun/newton-512x512.png", "small": "https://cdn.kastatic.org/images/badges/sun/newton-40x40.png", "email": "https://cdn.kastatic.org/images/badges/sun/newton-70x70.png", "compact": "https://cdn.kastatic.org/images/badges/sun/newton-60x60.png"}, "relativeUrl": "/badges/newton", "badgeCategory": 3, "description": "Newton", "translatedDescription": "Newton", "safeExtendedDescription": "Achieve mastery in 400 unique skills", "points": 150000, "iconSrc": "https://cdn.kastatic.org/images/badges/sun/newton-40x40.png", "hideContext": false, "slug": "newton", "name": "newtonmasterybadge"}, {"absoluteUrl": "https://www.khanacademy.org/badges/incredible-inspiration", "isRetired": false, "isOwned": false, "translatedSafeExtendedDescription": "Other users created 50 programs based on one of yours", "icons": {"large": "https://cdn.kastatic.org/images/badges/earth/incredible-inspiration-512x512.png", "small": "https://cdn.kastatic.org/images/badges/earth/incredible-inspiration-40x40.png", "email": "https://cdn.kastatic.org/images/badges/earth/incredible-inspiration-70x70.png", "compact": "https://cdn.kastatic.org/images/badges/earth/incredible-inspiration-60x60.png"}, "relativeUrl": "/badges/incredible-inspiration", "badgeCategory": 2, "description": "Incredible Inspiration", "translatedDescription": "Incredible Inspiration", "safeExtendedDescription": "Other users created 50 programs based on one of yours", "points": 5000, "iconSrc": "https://cdn.kastatic.org/images/badges/earth/incredible-inspiration-40x40.png", "hideContext": false, "slug": "incredible-inspiration", "name": "getforkedfiftytimesbadge"}, {"absoluteUrl": "https://www.khanacademy.org/badges/millionaire", "isRetired": false, "isOwned": false, "translatedSafeExtendedDescription": "Earn 1,000,000 energy points", "icons": {"large": "https://cdn.kastatic.org/images/badges/sun/millionaire-512x512.png", "small": "https://cdn.kastatic.org/images/badges/sun/millionaire-40x40.png", "email": "https://cdn.kastatic.org/images/badges/sun/millionaire-70x70.png", "compact": "https://cdn.kastatic.org/images/badges/sun/millionaire-60x60.png"}, "relativeUrl": "/badges/millionaire", "badgeCategory": 3, "description": "Millionaire", "translatedDescription": "Millionaire", "safeExtendedDescription": "Earn 1,000,000 energy points", "points": 0, "iconSrc": "https://cdn.kastatic.org/images/badges/sun/millionaire-40x40.png", "hideContext": false, "slug": "millionaire", "name": "millionairebadge"}, {"absoluteUrl": "https://www.khanacademy.org/badges/trigonometry-trig-identities-and-examples", "isRetired": false, "isOwned": false, "translatedSafeExtendedDescription": "Achieve mastery in all skills in Trigonometry: Trig identities and examples", "icons": {"large": "https://cdn.kastatic.org/images/power-mode/badges/default-250x250.png?10", "small": "https://cdn.kastatic.org/images/power-mode/badges/default-40x40.png?10", "email": "https://cdn.kastatic.org/images/badges/master-challenge-blue-70x70.png", "compact": "https://cdn.kastatic.org/images/power-mode/badges/default-60x60.png?10"}, "relativeUrl": "/badges/trigonometry-trig-identities-and-examples", "badgeCategory": 5, "description": "Trigonometry: Trig identities and examples", "translatedDescription": "Trigonometry: Trig identities and examples", "safeExtendedDescription": "Achieve mastery in all skills in Trigonometry: Trig identities and examples", "points": 0, "iconSrc": "https://cdn.kastatic.org/images/power-mode/badges/default-40x40.png?10", "hideContext": false, "slug": "trigonometry-trig-identities-and-examples", "name": "topic_exercise_1cma_FaxmfJzuGtkwR93uwPA-wOqlh4W69Wafn26_mastery"}], "moderatorLevel": 0, "restrictedDomain": null, "allowedByParentToAddAnyCoach": true, "avatarSrc": "https://cdn.kastatic.org/images/avatars/svg/robot_male_3.svg", "userLocation": {"city": "", "country": "", "googlePlacesId": "", "state": "", "displayText": "", "lastModified": "2015-06-05T15:52:54Z", "postalCode": ""}, "canRecordTutorial": false, "points": 1317868, "avatar": {"translatedDisplayName": "Hal", "imagePath": "/images/avatars/svg/robot_male_3.svg", "displayName": "Hal", "name": "male_robot_hal_style", "partType": "style", "translatedRequirements": ["Earn 250,000 energy points"], "forModel": "male_robot", "rewardType": "avatar_reward", "thumbnailSrc": "https://cdn.kastatic.org/images/avatars/svg/robot_male_3.svg", "imageSrc": "https://cdn.kastatic.org/images/avatars/svg/robot_male_3.svg", "thumbnailPath": ""}, "includesUserDataInfo": true, "kaid": "kaid_377771940089749709022333"}, "discussion": {"showProjectFeedback": true, "loggedIn": false, "isDeveloper": false, "communityQuestionsTitle": "Computer Science", "showDocumentation": true, "isVideo": false, "translatedCommunityQuestionsTitle": "Computer Science", "focusId": "4783966839635968", "isOwner": false, "restrictPosting": false, "which": "scratchpad-questions", "focusKind": "scratchpad", "communityQuestionsUrl": "/computer-programming/d", "canEdit": false, "canRequestFeedback": false, "showSpinoffs": true}, "upVoted": false, "originScratchpad": null, "flaggedByUser": false, "downVoted": false, "userScratchpad": {"kind": "UserScratchpad", "msWatched": 0, "msDuration": null, "isProject": false, "lastMsWatched": 0, "challengeStatus": -1, "scratchpadKey": "ag5zfmtoYW4tYWNhZGVteXIXCxIKU2NyYXRjaHBhZBiAgOCg4d-_CAw", "fullyWatched": false, "isComplete": false, "isChallenge": false, "difficulty": null, "points": 0, "stashedCode": "", "key": "ag5zfmtoYW4tYWNhZGVteXKuAQsSDlVzZXJTY3JhdGNocGFkIpkBYWc1emZtdG9ZVzR0WVdOaFpHVnRlWEpVQ3hJSVZYTmxja1JoZEdFaVJuVnpaWEpmYVdSZmEyVjVYMmgwZEhBNkx5OXBaQzVyYUdGdVlXTmhaR1Z0ZVM1dmNtY3ZZMlpoWWpCa1pETTNPR0poTkdObFkySTVZVGcwTW1Ga1ltUXdaakkyWWpjTTo0NzgzOTY2ODM5NjM1OTY4DA", "userKey": "ag5zfmtoYW4tYWNhZGVteXJUCxIIVXNlckRhdGEiRnVzZXJfaWRfa2V5X2h0dHA6Ly9pZC5raGFuYWNhZGVteS5vcmcvY2ZhYjBkZDM3OGJhNGNlY2I5YTg0MmFkYmQwZjI2YjcM", "id": "ag5zfmtoYW4tYWNhZGVteXJUCxIIVXNlckRhdGEiRnVzZXJfaWRfa2V5X2h0dHA6Ly9pZC5raGFuYWNhZGVteS5vcmcvY2ZhYjBkZDM3OGJhNGNlY2I5YTg0MmFkYmQwZjI2YjcM:4783966839635968", "viewed": true}}